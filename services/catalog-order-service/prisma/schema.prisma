// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id Int @id @default(autoincrement())
  name String
  description String?
  priceCents Int
  sku String? @unique
  slug String? @unique
  categoryId Int?
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  inventory Inventory?
  cartItems CartItem[] @relation("ProductCartItems")
  orderItems OrderItem[] @relation("ProductOrderItems")
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  slug String? @unique
  products Product[]
}

model Inventory {
  productId Int @id
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  available Int @default(0)
  reserved Int @default(0)
  updatedAt DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())
  userId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  items CartItem[]
}

model CartItem {
  id Int @id @default(autoincrement())
  cartId Int 
  productId Int
  quantity Int
  unitPrice Int

  cart Cart @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product Product @relation("ProductCartItems", fields: [productId], references: [id], onDelete: Restrict)

  @@unique([cartId, productId])
}

model Order {
  id Int @id @default(autoincrement())
  userId Int?
  status String @default("PENDING")
  totalCents Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  items OrderItem[]
}

model OrderItem {
  id Int @id @default(autoincrement())
  orderId Int
  productId Int
  quantity Int
  unitPrice Int

  order Order @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation("ProductOrderItems", fields: [productId], references: [id])

  @@unique([orderId, productId])
}
